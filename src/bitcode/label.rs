use std::sync::*;

lazy_static! {
    /// The ID to assign to the next label we create
    static ref NEXT_ID: Mutex<u64> = Mutex::new(0);
}

///
/// A label is a storage location used to keep the value of a value that's generated by
///
#[derive(Clone, PartialEq, Hash)]
pub struct Label {
    id: u64
}

impl Label {
    ///
    /// Creates a new label
    ///
    pub fn new() -> Label {
        // Assign an ID to this label
        let mut next_id = NEXT_ID.lock().unwrap();
        let id          = *next_id;
        (*next_id)      += 1;

        Label {
            id: id
        }
    }
}
